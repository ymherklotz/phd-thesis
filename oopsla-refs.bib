@article{leroy09_formal_verif_realis_compil,
  author =       {Leroy, Xavier},
  title =        {Formal Verification of a Realistic Compiler},
  journal =      {Commun. ACM},
  volume =       52,
  number =       7,
  pages =        {107-115},
  year =         2009,
  doi =          {10.1145/1538788.1538814},
  address =      {New York, NY, USA},
  issn =         {0001-0782},
  issue_date =   {July 2009},
  month =        jul,
  numpages =     9,
  publisher =    {ACM},
}

@article{six+20,
 author={Cyril Six and Sylvain Boulm\'e and David Monniaux},
 title = {{Certified and efficient instruction scheduling: Application to interlocked {VLIW} processors}},
  journal   = {Proc. {ACM} Program. Lang.},
  number    = {{OOPSLA}},
  year      = {2020}
 }

@inproceedings{lidbury15_many_core_compil_fuzzin,
  author          = {Lidbury, Christopher and Lascu, Andrei and Chong, Nathan and Donaldson,
                  Alastair F.},
  title           = {Many-Core Compiler Fuzzing},
  booktitle       = {Proceedings of the 36th ACM SIGPLAN Conference on Programming Language Design
                  and Implementation},
  year            = 2015,
  pages           = {65-76},
  doi             = {10.1145/2737924.2737986},
  address         = {New York, NY, USA},
  isbn            = 9781450334686,
  location        = {Portland, OR, USA},
  numpages        = 12,
  publisher       = {ACM},
  series          = {PLDI '15},
}

@misc{polybench,
author = {Pouchet, Louis-No\"el},
title = {PolyBench/C: the Polyhedral Benchmark suite},
url = {http://web.cse.ohio-state.edu/~pouchet.2/software/polybench/},
year = {2020},
}

@INPROCEEDINGS{5522874,
  author={Dan Gajski and Todd Austin and Steve Svoboda},
  booktitle={Design Automation Conference}, 
  title={What input-language is the best choice for high level synthesis (HLS)?}, 
  year={2010},
  volume={},
  number={},
  pages={857-858},
  doi={10.1145/1837274.1837489}}
  
@inproceedings{bluespec,
  author={Nikhil, Rishiyur S. },
  booktitle={Proceedings. Second ACM and IEEE International Conference on Formal Methods and Models for Co-Design, 2004. MEMOCODE '04.}, 
  title={Bluespec System Verilog: efficient, correct RTL from high level specifications}, 
  year={2004},
  volume={},
  number={},
  pages={69-70},
  doi={10.1109/MEMCOD.2004.1459818}}
  
@inproceedings{davidthomas_asap16,
  author    = {Thomas, David B.},
  title     = {Synthesisable recursion for {C++} {HLS} tools},
  booktitle = {{ASAP}},
  pages     = {91--98},
  publisher = {{IEEE} Computer Society},
  year      = {2016},
  doi = {10.1109/ASAP.2016.7760777}
}  
  
@article{cong+11,
  author    = {Jason Cong and
               Bin Liu and
               Stephen Neuendorffer and
               Juanjo Noguera and
               Kees A. Vissers and
               Zhiru Zhang},
  title     = {High-Level Synthesis for FPGAs: From Prototyping to Deployment},
  journal   = {{IEEE} Trans. Comput. Aided Des. Integr. Circuits Syst.},
  volume    = {30},
  number    = {4},
  pages     = {473--491},
  year      = {2011},
  doi = {10.1109/TCAD.2011.2110592}
}
  
@inproceedings{kiwi,
  author    = {David J. Greaves and
               Satnam Singh},
  title     = {Kiwi: Synthesis of {FPGA} Circuits from Parallel Programs},
  booktitle = {{FCCM}},
  pages     = {3--12},
  publisher = {{IEEE} Computer Society},
  year      = {2008},
  doi={10.1109/FCCM.2008.46}
}
  
@inproceedings{spatial,
  author    = {David Koeplinger and
               Matthew Feldman and
               Raghu Prabhakar and
               Yaqi Zhang and
               Stefan Hadjis and
               Ruben Fiszel and
               Tian Zhao and
               Luigi Nardi and
               Ardavan Pedram and
               Christos Kozyrakis and
               Kunle Olukotun},
  title     = {Spatial: A Language and Compiler for Application Accelerators},
  booktitle = {{PLDI}},
  pages     = {296--311},
  publisher = {{ACM}},
  year      = {2018},
  doi       = {https://doi.org/10.1145/3192366.3192379}
}

@misc{greaves_note,
      title={Research Note: An Open Source Bluespec Compiler},
      author={David J. Greaves},
      year={2019},
      eprint={1905.03746},
      archivePrefix={arXiv},
      primaryClass={cs.PL}
}

@article{takach16_high_level_synth,
  author          = {A. {Takach}},
  title           = {High-Level Synthesis: Status, Trends, and Future
                  Directions},
  journal         = {IEEE Design Test},
  volume          = {33},
  number          = {3},
  pages           = {116-124},
  year            = {2016},
  doi             = {10.1109/MDAT.2016.2544850},
  url             = {https://doi.org/10.1109/MDAT.2016.2544850},
  ISSN            = {2168-2364},
  month           = {June},
}

@inproceedings{liu16_effic_high_level_synth_desig,
  author          = { {Dong Liu} and B. C. {Schafer}},
  title           = {Efficient and reliable High-Level Synthesis Design Space
                  Explorer for FPGAs},
  booktitle       = {2016 26th International Conference on Field Programmable
                  Logic and Applications (FPL)},
  year            = 2016,
  pages           = {1-8},
  doi             = {10.1109/FPL.2016.7577370},
  ISSN            = {1946-1488},
  month           = {Aug},
}

@article{lahti19_are_we_there_yet,
  author          = {S. {Lahti} and P. {Sj{\"o}vall} and J. {Vanne} and
                  T. D. {H{\"a}m{\"a}l{\"a}inen}},
  title           = {Are We There Yet? a Study on the State of High-Level
                  Synthesis},
  journal         = {IEEE Transactions on Computer-Aided Design of Integrated
                  Circuits and Systems},
  volume          = {38},
  number          = {5},
  pages           = {898-911},
  year            = {2019},
  doi             = {10.1109/TCAD.2018.2834439},
  ISSN            = {1937-4151},
  month           = {May},
}

@inproceedings{gupta03_spark,
  author          = {S. {Gupta} and N. {Dutt} and R. {Gupta} and A. {Nicolau}},
  title           = {{SPARK}: a high-level synthesis framework for applying parallelizing compiler
                  transformations},
  booktitle       = {16th International Conference on VLSI Design, 2003. Proceedings.},
  year            = 2003,
  pages           = {461-466},
  doi             = {10.1109/ICVD.2003.1183177},
  url             = {https://doi.org/10.1109/ICVD.2003.1183177},
  ISSN            = {1063-9667},
  month           = {Jan},
}

@inproceedings{pnueli98_trans,
  author          = "Pnueli, A.  and Siegel, M.  and Singerman, E.",
  title           = "Translation validation",
  booktitle       = "Tools and Algorithms for the Construction and Analysis of Systems",
  year            = 1998,
  pages           = "151--166",
  address         = "Berlin, Heidelberg",
  editor          = "Steffen, Bernhard",
  isbn            = "978-3-540-69753-4",
  publisher       = "Springer",
  doi = "10.1007/BFb0054170"
}

@article{chouksey19_trans_valid_code_motion_trans_invol_loops,
  author =       {R. {Chouksey} and C. {Karfa} and P. {Bhaduri}},
  title =        {Translation Validation of Code Motion Transformations
                  Involving Loops},
  journal =      {IEEE Transactions on Computer-Aided Design of Integrated
                  Circuits and Systems},
  volume =       38,
  number =       7,
  pages =        {1378-1382},
  year =         2019,
  doi =          {10.1109/TCAD.2018.2846654},
  ISSN =         {1937-4151},
  month =        {July},
}

@article{banerjee14_verif_code_motion_techn_using_value_propag,
  author = {K. {Banerjee} and C. {Karfa} and D. {Sarkar} and C. {Mandal}},
  title = {Verification of Code Motion Techniques Using Value
                  Propagation},
  journal = {IEEE Transactions on Computer-Aided Design of Integrated
                  Circuits and Systems},
  volume = 33,
  number = 8,
  pages = {1180-1193},
  year = 2014,
  doi = {10.1109/TCAD.2014.2314392},
  ISSN = {1937-4151},
  month = {Aug}
}

@inproceedings{leroy06_formal_certif_compil_back_end,
  author = {Leroy, Xavier},
  title = {Formal Certification of a Compiler Back-End or: Programming
                  a Compiler with a Proof Assistant},
  booktitle = {Conference Record of the 33rd ACM SIGPLAN-SIGACT Symposium
                  on Principles of Programming Languages},
  year = 2006,
  pages = {42-54},
  doi = {10.1145/1111037.1111042},
  url = {https://doi.org/10.1145/1111037.1111042},
  address = {New York, NY, USA},
  isbn = 1595930272,
  location = {Charleston, South Carolina, USA},
  numpages = 13,
  publisher = {ACM},
  series = {POPL '06}
}

@book{bertot04_inter_theor_provin_progr_devel,
  author          = {Yves Bertot and Pierre Cast{\'{e}}ran},
  title           = {Interactive Theorem Proving and Program Development},
  year            = 2004,
  publisher       = {Springer Berlin Heidelberg},
  url             = {https://doi.org/10.1007/978-3-662-07964-5},
  doi             = {10.1007/978-3-662-07964-5},
}

@inproceedings{kundu08_valid_high_level_synth,
  author          = "Kundu, Sudipta and Lerner, Sorin and Gupta, Rajesh",
  title           = "Validating High-Level Synthesis",
  booktitle       = "Computer Aided Verification",
  year            = 2008,
  pages           = "459--472",
  address         = "Berlin, Heidelberg",
  editor          = "Gupta, Aarti and Malik, Sharad",
  isbn            = "978-3-540-70545-1",
  publisher       = "Springer",
  doi = "10.1007/978-3-540-70545-1_44"
}

@inproceedings{chapman92_verif_bedroc,
  author          = {R. {Chapman} and G. {Brown} and M. {Leeser}},
  title           = {Verified high-level synthesis in BEDROC},
  booktitle       = {[1992] Proceedings The European Conference on Design Automation},
  year            = 1992,
  pages           = {59--63},
  doi             = {10.1109/EDAC.1992.205894},
  month           = {March},
  publisher       = {IEEE Computer Society},
}

@article{hwang91_formal_approac_to_sched_probl,
  author = {C. -. {Hwang} and J. -. {Lee} and Y. -. {Hsu}},
  title = {A Formal Approach To the Scheduling Problem in High Level
                  Synthesis},
  journal = {IEEE Transactions on Computer-Aided Design of Integrated
                  Circuits and Systems},
  volume = 10,
  number = 4,
  pages = {464-475},
  year = 1991,
  doi = {10.1109/43.75629},
  url = {https://doi.org/10.1109/43.75629},
  month = {April}
}

@inproceedings{page91_compil_occam,
  author = {Page, Ian and Luk, Wayne},
  title = {Compiling Occam into field-programmable gate arrays},
  booktitle = {FPGAs, Oxford Workshop on Field Programmable Logic and
                  Applications},
  year = 1991,
  volume = 15,
  pages = {271--283},
}

@inproceedings{grass94_high,
  author = {W. {Grass} and M. {Mutz} and W. -. {Tiedemann}},
  title = {High level synthesis based on formal methods},
  booktitle = {Proceedings of Twentieth Euromicro Conference. System
                  Architecture and Integration},
  year = 1994,
  pages = {83-91},
  doi = {10.1109/EURMIC.1994.390403},
  month = {Sep.}
}

@inproceedings{jifeng93_towar,
  author = "Jifeng, He and Page, Ian and Bowen, Jonathan",
  title = "Towards a provably correct hardware implementation of Occam",
  booktitle = "Correct Hardware Design and Verification Methods",
  year = 1993,
  pages = "214--225",
  address = "Berlin, Heidelberg",
  editor = "Milne, George J.  and Pierre, Laurence",
  isbn = "978-3-540-70655-7",
  publisher = "Springer"
}

@article{perna12_mechan_wire_wise_verif_handel_c_synth,
  author = "Juan Perna and Jim Woodcock",
  title = {Mechanised Wire-Wise Verification of {Handel-C} Synthesis},
  journal = "Science of Computer Programming",
  volume = 77,
  number = 4,
  pages = "424 - 443",
  year = 2012,
  doi = "10.1016/j.scico.2010.02.007",
  issn = "0167-6423",
}

@article{perna11_correc_hardw_synth,
  author = "Perna, Juan and Woodcock, Jim and Sampaio, Augusto and Iyoda,
                  Juliano",
  title = {Correct Hardware Synthesis},
  journal = "Acta Informatica",
  volume = 48,
  number = 7,
  pages = "363--396",
  year = 2011,
  doi = "10.1007/s00236-011-0142-y",
  day = 01,
  issn = "1432-0525",
  month = "Dec"
}

@book{micheli94_synth_optim_digit_circuit,
  author          = {De Micheli, Giovanni},
  title           = {Synthesis and Optimization of Digital Circuits},
  year            = 1994,
  publisher       = {McGraw-Hill Higher Education},
  edition         = {1st},
  isbn            = 0070163332,
}

@article{05_ieee_stand_veril_regis_trans_level_synth,
  title           = {{IEEE} Standard for {Verilog} Register Transfer Level Synthesis},
  journal         = {IEC 62142-2005 First edition 2005-06 IEEE Std 1364.1},
  volume          = {},
  number          = {},
  pages           = {1-116},
  year            = {2005},
  doi             = {10.1109/IEEESTD.2005.339572},
  url             = {https://doi.org/10.1109/IEEESTD.2005.339572},
  ISSN            = {},
  key             = {IEEE Std 1364.1},
  keywords        = {IEC Standards;Verilog;Registers},
  month           = {},
  type            = {Standard},
}

@article{06_ieee_stand_veril_hardw_descr_languag,
  author          = {},
  title           = {{IEEE} Standard for Verilog Hardware Description Language},
  journal         = {IEEE Std 1364-2005 (Revision of IEEE Std 1364-2001)},
  volume          = {},
  number          = {},
  pages           = {1-590},
  year            = {2006},
  doi             = {10.1109/IEEESTD.2006.99495},
  url             = {https://doi.org/10.1109/IEEESTD.2006.99495},
  ISSN            = {},
  key             = {IEEE Std 1364},
  month           = {April},
  type            = {Standard},
}

@misc{xilinx20_vivad_high_synth,
  author          = {Xilinx},
  title           = {Vivado High-level Synthesis},
  url             = {https://bit.ly/39ereMx},
  urldate         = {2020-07-20},
  year            = 2020,
}

@misc{intel_hls,
  author = {Intel},
  title = {High-level Synthesis Compiler},
  url = {https://intel.ly/2UDiWr5},
  urldate = {2020-11-18},
  year = {2020},
  }

@misc{intel20_sdk_openc_applic,
  author          = {Intel},
  title           = {{SDK} for {OpenCL} Applications},
  url             = {https://intel.ly/30sYHz0},
  urldate         = {2020-07-20},
  year            = 2020,
}

@inproceedings{bambu_hls,
  author    = {Christian Pilato and
               Fabrizio Ferrandi},
  title     = {Bambu: {A} modular framework for the high level synthesis of memory-intensive
               applications},
  booktitle = {{FPL}},
  pages     = {1--4},
  publisher = {{IEEE}},
  year      = {2013},
  doi       = {10.1109/FPL.2013.6645550}
}

@inproceedings{nigam20_predic_accel_desig_time_sensit_affin_types,
  author          = {Nigam, Rachit and Atapattu, Sachille and Thomas, Samuel and Li, Zhijing and
                  Bauer, Theodore and Ye, Yuwei and Koti, Apurva and Sampson, Adrian and Zhang,
                  Zhiru},
  title           = {Predictable Accelerator Design with Time-Sensitive Affine Types},
  booktitle       = {Proceedings of the 41st ACM SIGPLAN Conference on Programming Language Design
                  and Implementation},
  year            = 2020,
  pages           = {393-407},
  doi             = {10.1145/3385412.3385974},
  url             = {https://doi.org/10.1145/3385412.3385974},
  address         = {New York, NY, USA},
  isbn            = 9781450376136,
  keywords        = {Affine Type Systems, High-Level Synthesis},
  location        = {London, UK},
  numpages        = 15,
  publisher       = {ACM},
  series          = {PLDI 2020},
}

@inproceedings{bourgeat20_essen_blues,
  author          = {Bourgeat, Thomas and Pit-Claudel, Cl\'{e}ment and Chlipala, Adam and Arvind},
  title           = {The Essence of {Bluespec}: A Core Language for Rule-Based Hardware Design},
  booktitle       = {Proceedings of the 41st ACM SIGPLAN Conference on Programming Language Design
                  and Implementation},
  year            = 2020,
  pages           = {243-257},
  doi             = {10.1145/3385412.3385965},
  url             = {https://doi.org/10.1145/3385412.3385965},
  address         = {New York, NY, USA},
  isbn            = 9781450376136,
  keywords        = {Hardware Description Language, Compiler Correctness, Semantics},
  location        = {London, UK},
  numpages        = 15,
  publisher       = {ACM},
  series          = {PLDI 2020},
}

@inproceedings{yang11_findin_under_bugs_c_compil,
	author = {Yang, Xuejun and Chen, Yang and Eide, Eric and Regehr, John},
	title = {Finding and Understanding Bugs in {C} Compilers},
	booktitle = {Proceedings of the 32nd ACM SIGPLAN Conference on Programming Language Design
                  and Implementation},
	year = 2011,
	pages = {283-294},
	doi = {10.1145/1993498.1993532},
	url = {https://doi.org/10.1145/1993498.1993532},
	address = {New York, NY, USA},
	isbn = 9781450306638,
	keywords = {random program generation, random testing, automated testing, compiler testing,
                  compiler defect},
	location = {San Jose, California, USA},
	numpages = 12,
	publisher = {ACM},
	series = {PLDI '11}
}

@inproceedings{blazy05_formal_verif_memor_model_c,
	author = "Blazy, Sandrine and Leroy, Xavier",
	title = "Formal Verification of a Memory Model for {C}-Like Imperative
                  Languages",
	tags = {verification},
	booktitle = "Formal Methods and Software Engineering",
	year = 2005,
	pages = "280--299",
	address = "Berlin, Heidelberg",
	editor = "Lau, Kung-Kiu and Banach, Richard",
	isbn = "978-3-540-32250-4",
	publisher = "Springer Berlin Heidelberg",
	doi = {0.1007/11576280_20}
}

@inproceedings{slind08_brief_overv_hol4,
  author          = "Slind, Konrad and Norrish, Michael",
  title           = "A Brief Overview of {HOL4}",
  booktitle       = "Theorem Proving in Higher Order Logics",
  year            = 2008,
  pages           = "28--32",
  address         = "Berlin, Heidelberg",
  editor          = "Mohamed, Otmane Ait and Mu{\~{n}}oz, C{\'e}sar and Tahar, Sofi{\`e}ne",
  isbn            = "978-3-540-71067-7",
  keywords        = {theorem proving;HOL},
  publisher       = "Springer Berlin Heidelberg",
}

@inproceedings{meredith10_veril,
	author = {P. {Meredith} and M. {Katelman} and J. {Meseguer} and
                  G. {Ro{\c{s}}u}},
	title = {A formal executable semantics of {Verilog}},
	tags = {semantics},
	booktitle = {Eighth ACM/IEEE International Conference on Formal Methods and
                  Models for Codesign (MEMOCODE 2010)},
	year = 2010,
	pages = {179-188},
	doi = {10.1109/MEMCOD.2010.5558634},
	url = {https://doi.org/10.1109/MEMCOD.2010.5558634},
	month = {July}
}

@inproceedings{jourdan12_valid_lr_parser,
	author = "Jourdan, Jacques-Henri and Pottier, Fran{\c{c}}ois and
                  Leroy, Xavier",
	title = "Validating LR(1) Parsers",
	booktitle = "Programming Languages and Systems",
	year = 2012,
	pages = "397--416",
	address = "Berlin, Heidelberg",
	editor = "Seidl, Helmut",
	isbn = "978-3-642-28869-2",
	publisher = "Springer Berlin Heidelberg",
	doi = "10.1007/978-3-642-28869-2_20"
}

@inproceedings{zhao12_formal_llvm_inter_repres_verif_progr_trans,
  author    = {Jianzhou Zhao and
               Santosh Nagarakatte and
               Milo M. K. Martin and
               Steve Zdancewic},
  editor    = {John Field and
               Michael Hicks},
  title     = {Formalizing the {LLVM} intermediate representation for verified program
               transformations},
  booktitle = {Proceedings of the 39th {ACM} {SIGPLAN-SIGACT} Symposium on Principles
               of Programming Languages, {POPL} 2012, Philadelphia, Pennsylvania,
               USA, January 22-28, 2012},
  pages     = {427--440},
  publisher = {{ACM}},
  year      = {2012},
  url       = {https://doi.org/10.1145/2103656.2103709},
  doi       = {10.1145/2103656.2103709},
  timestamp = {Thu, 24 Jun 2021 16:19:31 +0200},
  biburl    = {https://dblp.org/rec/conf/popl/ZhaoNMZ12.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}


@inproceedings{hwang99_fsmd,
  author          = {Hwang, Enoch and Vahid, Frank and Hsu, Yu-Chin},
  title           = {FSMD functional partitioning for low power},
  booktitle       = {Proceedings of the conference on Design, automation and test in Europe},
  year            = 1999,
  pages           = {7--es},
  doi = {10.1109/DATE.1999.761092}
}

@inproceedings{nikhil04_blues_system_veril,
  author          = {R. {Nikhil}},
  title           = {Bluespec System Verilog: efficient, correct RTL from high level specifications},
  booktitle       = {Proceedings. Second ACM and IEEE International Conference on Formal Methods and
                  Models for Co-Design, 2004. MEMOCODE '04.},
  year            = 2004,
  pages           = {69-70},
  doi             = {10.1109/MEMCOD.2004.1459818},
  url             = {https://doi.org/10.1109/MEMCOD.2004.1459818},
}

@inproceedings{schuiki20_llhd,
  author          = {Schuiki, Fabian and Kurth, Andreas and Grosser, Tobias and Benini, Luca},
  title           = {LLHD: A Multi-Level Intermediate Representation for Hardware Description
                  Languages},
  booktitle       = {Proceedings of the 41st ACM SIGPLAN Conference on Programming Language Design
                  and Implementation},
  year            = 2020,
  pages           = {258-271},
  doi             = {10.1145/3385412.3386024},
  url             = {https://doi.org/10.1145/3385412.3386024},
  address         = {New York, NY, USA},
  isbn            = 9781450376136,
  location        = {London, UK},
  numpages        = 14,
  publisher       = {ACM},
  series          = {PLDI 2020},
}

@InProceedings{zhu13_mechan_approac_linkin_operat_seman,
  author          = "Zhu, Huibiao and Liu, Peng and He, Jifeng and Qin, Shengchao",
  title           = "Mechanical Approach to Linking Operational Semantics and Algebraic Semantics
                  for Verilog Using Maude",
  booktitle       = "Unifying Theories of Programming",
  year            = 2013,
  pages           = "164--185",
  address         = "Berlin, Heidelberg",
  editor          = "Wolff, Burkhart and Gaudel, Marie-Claude and Feliachi, Abderrahmane",
  isbn            = "978-3-642-35705-3",
  publisher       = "Springer Berlin Heidelberg",
}


@inproceedings{poly_hls_zuo2013,
  title={Improving polyhedral code generation for high-level synthesis},
  author={Zuo, Wei and Li, Peng and Chen, Deming and Pouchet, Louis-No{\"e}l and Zhong, Shunan and Cong, Jason},
  booktitle={2013 International Conference on Hardware/Software Codesign and System Synthesis (CODES+ ISSS)},
  pages={1--10},
  year={2013},
  organization={IEEE},
  doi={https://doi.org/10.1109/CODES-ISSS.2013.6659002}
}

@INPROCEEDINGS{poly_hls_zhao2017,  author={Zhao, Jieru and Feng, Liang and Sinha, Sharad and Zhang, Wei and Liang, Yun and He, Bingsheng},  booktitle={2017 IEEE/ACM International Conference on Computer-Aided Design (ICCAD)},   title={COMBA: A comprehensive model-based analysis framework for high level synthesis of real applications},   year={2017},  volume={},  number={},  pages={430-437},  doi={10.1109/ICCAD.2017.8203809}}

@inproceedings{poly_hls_pouchet2013polyhedral,
  title={Polyhedral-based data reuse optimization for configurable computing},
  author={Pouchet, Louis-Noel and Zhang, Peng and Sadayappan, Ponnuswamy and Cong, Jason},
  booktitle={Proceedings of the ACM/SIGDA international symposium on Field programmable gate arrays},
  pages={29--38},
  year={2013},
  doi={https://doi.org/10.1145/2435264.2435273}
}

@misc{quartus,
  author          = {Intel},
  title           = {{Intel® Quartus® Prime Software Suite}},
  url             = {https://intel.ly/3fpUNhv},
  urldate         = {2020-07-20},
  year            = 2020,
}

@misc{xilinx_vivad_desig_suite,
  author =       {Xilinx},
  title =        {{Vivado Design Suite}},
  url =          {https://bit.ly/2wZAmld},
  urldate =      {2019-01-14},
  year = 2019,
}

@inproceedings{chisel,
  title={{Chisel: Constructing hardware in a Scala embedded language}},
  author={Bachrach, Jonathan and Vo, Huy and Richards, Brian and Lee, Yunsup and Waterman, Andrew and Avi{\v{z}}ienis, Rimas and Wawrzynek, John and Asanovi{\'c}, Krste},
  booktitle={DAC Design Automation Conference 2012},
  pages={1212--1221},
  year={2012},
  organization={IEEE},
  doi={https://doi.org/10.1145/2228360.2228584},
}

@article{aubury1996handel,
  title={Handel-C language reference guide},
  author={Aubury, Matthew and Page, Ian and Randall, Geoff and Saul, Jonathan and Watts, Robin},
  journal={Computing Laboratory. Oxford University, UK},
  year={1996}
}

@inproceedings{clarke03_behav_c_veril,
  author          = {E. {Clarke} and D. {Kroening} and K. {Yorav}},
  title           = {Behavioral consistency of {C} and {Verilog} programs using bounded model checking},
  booktitle       = {Proceedings 2003. Design Automation Conference (IEEE Cat. No.03CH37451)},
  year            = 2003,
  pages           = {368-371},
  doi             = {10.1145/775832.775928},
  url             = {https://doi.org/10.1145/775832.775928},
}

@article{besson18_compc,
	doi = {10.1007/s10817-018-9496-y},
	url = {https://doi.org/10.1007/s10817-018-9496-y},
	year = {2018},
	month = nov,
	publisher = {Springer Science and Business Media {LLC}},
	volume = {63},
	number = {2},
	pages = {369--392},
	author = {Fr{\'{e}}d{\'{e}}ric Besson and Sandrine Blazy and Pierre Wilke},
	title = {{CompCertS}: A Memory-Aware Verified C Compiler Using a Pointer as Integer Semantics},
	journal = {Journal of Automated Reasoning}
}

@article{sevcik13_compc,
	author = {\v{S}ev\v{c}\'{\i}k, Jaroslav and Vafeiadis, Viktor and Zappa Nardelli, Francesco and Jagannathan, Suresh and Sewell, Peter},
	title = {CompCertTSO: A Verified Compiler for Relaxed-Memory Concurrency},
	year = {2013},
	issue_date = {June 2013},
	publisher = {ACM},
	address = {New York, NY, USA},
	volume = {60},
	number = {3},
	issn = {0004-5411},
	url = {https://doi.org/10.1145/2487241.2487248},
	doi = {10.1145/2487241.2487248},
	abstract = {In this article, we consider the semantic design and verified compilation of a C-like programming language for concurrent shared-memory computation on x86 multiprocessors. The design of such a language is made surprisingly subtle by several factors: the relaxed-memory behavior of the hardware, the effects of compiler optimization on concurrent code, the need to support high-performance concurrent algorithms, and the desire for a reasonably simple programming model. In turn, this complexity makes verified compilation both essential and challenging.We describe ClightTSO, a concurrent extension of CompCert’s Clight in which the TSO-based memory model of x86 multiprocessors is exposed for high-performance code, and CompCertTSO, a formally verified compiler from ClightTSO to x86 assembly language, building on CompCert. CompCertTSO is verified in Coq: for any well-behaved and successfully compiled ClightTSO source program, any permitted observable behavior of the generated assembly code (if it does not run out of memory) is also possible in the source semantics. We also describe some verified fence-elimination optimizations, integrated into CompCertTSO.},
	journal = {J. ACM},
	month = jun,
	articleno = {22},
	numpages = {50},
	keywords = {semantics, Relaxed memory models, verified compilation}
}

@article{wang20_compc,
	author = {Wang, Yuting and Xu, Xiangzhe and Wilke, Pierre and Shao, Zhong},
	title = {CompCertELF: Verified Separate Compilation of C Programs into ELF Object Files},
	year = {2020},
	issue_date = {November 2020},
	publisher = {ACM},
	address = {New York, NY, USA},
	volume = {4},
	number = {OOPSLA},
	url = {https://doi.org/10.1145/3428265},
	doi = {10.1145/3428265},
	abstract = { We present CompCertELF, the first extension to CompCert that supports verified compilation from C programs all the way to a standard binary file format, i.e., the ELF object format. Previous work on Stack-Aware CompCert provides a verified compilation chain from C programs to assembly programs with a realistic machine memory model. We build CompCertELF by modifying and extending this compilation chain with a verified assembler which further transforms assembly programs into ELF object files.  CompCert supports large-scale verification via verified separate compilation: C modules can be written and compiled separately, and then linked together to get a target program that refines the semantics of the program linked from the source modules. However, verified separate compilation in CompCert only works for compilation to assembly programs, not to object files. For the latter, the main difficulty is to bridge the two different views of linking: one for CompCert's programs that allows arbitrary shuffling of global definitions by linking and the other for object files that treats blocks of encoded definitions as indivisible units.  We propose a lightweight approach that solves the above problem without any modification to CompCert's framework for verified separate compilation: by introducing a notion of syntactical equivalence between programs and proving the commutativity between syntactical equivalence and the two different kinds of linking, we are able to transit from the more abstract linking operation in CompCert to the more concrete one for ELF object files. By applying this approach to CompCertELF, we obtain the first compiler that supports verified separate compilation of C programs into ELF object files. },
	journal = {Proc. ACM Program. Lang.},
	month = nov,
	articleno = {197},
	numpages = {28},
	keywords = {Generation of Object Files, Assembler Verification, Verified Separate Compilation}
}

@inproceedings{10.1145/3437992.3439916,
author = {L\"{o}\"{o}w, Andreas},
title = {Lutsig: A Verified Verilog Compiler for Verified Circuit Development},
year = {2021},
isbn = {9781450382991},
publisher = {ACM},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3437992.3439916},
doi = {10.1145/3437992.3439916},
abstract = {We report on a new verified Verilog compiler called Lutsig. Lutsig currently targets (a class of) FPGAs and is capable of producing technology mapped netlists for FPGAs. We have connected Lutsig to existing Verilog development tools, and in this paper we show how Lutsig, as a consequence of this connection, fits into a hardware development methodology for verified circuits in the HOL4 theorem prover. One important step in the methodology is transporting properties proved at the behavioral Verilog level down to technology mapped netlists, and Lutsig is the component in the methodology that enables such transportation.},
booktitle = {Proceedings of the 10th ACM SIGPLAN International Conference on Certified Programs and Proofs},
pages = {46–60},
numpages = {15},
keywords = {hardware verification, hardware synthesis, compiler verification},
location = {Virtual, Denmark},
series = {CPP 2021}
}

@inproceedings{paulin89_sched_bindin_algor_high_level_synth,
	author = {Paulin, P. G. and Knight, J. P.},
	title = {Scheduling and Binding Algorithms for High-Level Synthesis},
	booktitle = {Proceedings of the 26th ACM/IEEE Design Automation Conference},
	year = 1989,
	pages = {1-6},
	doi = {10.1145/74382.74383},
	url = {https://doi.org/10.1145/74382.74383},
	address = {New York, NY, USA},
	isbn = 0897913108,
	location = {Las Vegas, Nevada, USA},
	numpages = 6,
	publisher = {ACM},
	series = {DAC '89},
}

@inproceedings{venkataramani07_operat,
	keywords = {operation chaining},
	author = {Girish Venkataramani and Goldstein, Seth C.},
	booktitle = {2007 IEEE/ACM International Conference on Computer-Aided Design},
	title = {Operation chaining asynchronous pipelined circuits},
	year = {2007},
	volume = {},
	number = {},
	pages = {442-449},
	doi = {10.1109/ICCAD.2007.4397305}
}

@inproceedings{noronha17_rapid_fpga,
	keywords = {high-level synthesis, FPGA, inlining, compiler optimisation},
	author = {D. H. {Noronha} and J. P. {Pinilla} and S. J. E. {Wilton}},
	booktitle = {2017 International Conference on ReConFigurable Computing and FPGAs (ReConFig)},
	title = {Rapid circuit-specific inlining tuning for FPGA high-level synthesis},
	year = {2017},
	volume = {},
	number = {},
	pages = {1-6},
	doi = {10.1109/RECONFIG.2017.8279807}
}

@software{yann_herklotz_2021_5093839,
  author       = {Yann Herklotz and
                  James D. Pollard and
                  Nadesh Ramanathan and
                  John Wickerson},
  title        = {ymherklotz/vericert: Vericert v1.2.1},
  month        = jul,
  year         = 2021,
  publisher    = {Zenodo},
  version      = {v1.2.1},
  doi          = {10.5281/zenodo.5093839},
  url          = {https://doi.org/10.5281/zenodo.5093839}
}

@INPROCEEDINGS{herklotz21_empir_study_reliab_high_level_synth_tools,
	author = {Herklotz, Yann and Du, Zewei and Ramanathan, Nadesh and Wickerson, John},
	booktitle = {2021 IEEE 29th Annual International Symposium on Field-Programmable Custom Computing Machines (FCCM)},
	title = {An Empirical Study of the Reliability of High-Level Synthesis Tools},
	year = {2021},
	volume = {},
	number = {},
	pages = {219-223},
	doi = {10.1109/FCCM51124.2021.00034}
}
